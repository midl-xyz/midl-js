/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	"/runes/v1/": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * API Status
		 * @description Displays the status of the API
		 */
		get: operations["getApiStatus"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/runes/v1/etchings": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * Rune etchings
		 * @description Retrieves a paginated list of rune etchings
		 */
		get: operations["getEtchings"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/runes/v1/etchings/{etching}": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * Rune etching
		 * @description Retrieves information for a Rune etching
		 */
		get: operations["getEtching"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/runes/v1/etchings/{etching}/activity": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * Rune activity
		 * @description Retrieves all activity for a Rune
		 */
		get: operations["getRuneActivity"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/runes/v1/etchings/{etching}/activity/{address}": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * Rune activity for address
		 * @description Retrieves all activity for a Rune address
		 */
		get: operations["getRuneAddressActivity"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/runes/v1/etchings/{etching}/holders": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * Rune holders
		 * @description Retrieves a paginated list of holders for a Rune
		 */
		get: operations["getRuneHolders"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/runes/v1/etchings/{etching}/holders/{address}": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * Rune holder balance
		 * @description Retrieves holder balance for a specific Rune
		 */
		get: operations["getRuneHolderBalance"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/runes/v1/addresses/{address}/balances": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * Address balances
		 * @description Retrieves a paginated list of address balances
		 */
		get: operations["getAddressBalances"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/runes/v1/addresses/{address}/activity": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * Address activity
		 * @description Retrieves a paginated list of rune activity for an address
		 */
		get: operations["getAddressActivity"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/runes/v1/transactions/{tx_id}/activity": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * Transaction activity
		 * @description Retrieves a paginated list of rune activity for a transaction
		 */
		get: operations["getTransactionActivity"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/runes/v1/transactions/{tx_id}/valid-ouptut": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * Validates output
		 * @description Validates the output of the given transaction for certain address, returning UTXO if the output is valid.
		 */
		get: operations["isValidOutput"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/runes/v1/transactions/{tx_id}/amount/{rune_id}": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Get the amount of the specified rune in the transaction. */
		get: operations["getTxVoutRuneAmount"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/runes/v1/blocks/{block}/activity": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * Block activity
		 * @description Retrieves a paginated list of rune activity for a block
		 */
		get: operations["getBlockActivity"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/runes/v1/blocks/height": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * Last scanned block height
		 * @description Retrieves a the height of the last scanned block
		 */
		get: operations["getBlockHeight"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
export interface components {
	schemas: never;
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
	getApiStatus: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/** @example  */
						server_version: string;
						status: string;
						block_height?: number;
					};
				};
			};
		};
	};
	getEtchings: {
		parameters: {
			query?: {
				/** @description Result offset */
				offset?: number;
				/** @description Results per page */
				limit?: number;
			};
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/** @example 20 */
						limit: number;
						/** @example 0 */
						offset: number;
						/** @example 1 */
						total: number;
						results: {
							/**
							 * ID
							 * @description Rune ID
							 * @example 840000:1
							 */
							id: string;
							/**
							 * Name
							 * @description Rune name
							 * @example ZZZZZFEHUZZZZZ
							 */
							name: string;
							/**
							 * Spaced name
							 * @description Rune name with spacers
							 * @example Z•Z•Z•Z•Z•FEHU•Z•Z•Z•Z•Z
							 */
							spaced_name: string;
							/**
							 * Number
							 * @description Rune number
							 * @example 1
							 */
							number: number;
							/**
							 * Divisibility
							 * @description Rune decimal places
							 * @example 2
							 */
							divisibility: number;
							/**
							 * Symbol
							 * @description Rune symbol
							 * @example ᚠ
							 */
							symbol: string;
							/**
							 * Turbo
							 * @description Rune upgradeability
							 * @example false
							 */
							turbo: boolean;
							/**
							 * Mint terms
							 * @description Rune mint terms
							 */
							mint_terms: {
								amount: string | null;
								cap: string | null;
								height_start: number | null;
								height_end: number | null;
								offset_start: number | null;
								offset_end: number | null;
							};
							/**
							 * Supply information
							 * @description Rune supply information
							 */
							supply: {
								/**
								 * Current supply
								 * @description Circulating supply including mints, burns and premine
								 * @example 11274916350
								 */
								current: string;
								/**
								 * Minted amount
								 * @description Total minted amount
								 * @example 274916100
								 */
								minted: string;
								/**
								 * Total mints
								 * @description Number of mints for this rune
								 * @example 250
								 */
								total_mints: string;
								/**
								 * Mint percentage
								 * @description Percentage of mints that have been claimed
								 * @example 59.4567
								 */
								mint_percentage: string;
								/**
								 * Mintable
								 * @description Whether or not this rune is mintable at this time
								 */
								mintable: boolean;
								/**
								 * Burned amount
								 * @description Total burned amount
								 * @example 5100
								 */
								burned: string;
								/**
								 * Total burns
								 * @description Number of burns for this rune
								 * @example 17
								 */
								total_burns: string;
								/**
								 * Premine amount
								 * @description Amount premined for this rune
								 * @example 11000000000
								 */
								premine: string;
							};
							/**
							 * Transaction location
							 * @description Location of the transaction which confirmed this operation
							 */
							location: {
								/**
								 * Block hash
								 * @description Bitcoin block hash
								 * @example 00000000000000000000c9787573a1f1775a2b56b403a2d0c7957e9a5bc754bb
								 */
								block_hash: string;
								/**
								 * Block height
								 * @description Bitcoin block height
								 * @example 840000
								 */
								block_height: number;
								/**
								 * Transaction ID
								 * @description Bitcoin transaction ID
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e
								 */
								tx_id: string;
								/**
								 * Transaction Index
								 * @description Index of this transaction in its Bitcoin block
								 * @example 1
								 */
								tx_index: number;
								/**
								 * Output number
								 * @description Bitcoin transaction output number
								 * @example 100
								 */
								vout?: number;
								/**
								 * Transaction output
								 * @description Bitcoin transaction output
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e:100
								 */
								output?: string;
								/**
								 * Timestamp
								 * @description Bitcoin transaction timestamp
								 * @example 1713571767
								 */
								timestamp: number;
							};
						}[];
					};
				};
			};
		};
	};
	getEtching: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				etching: string;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/**
						 * ID
						 * @description Rune ID
						 * @example 840000:1
						 */
						id: string;
						/**
						 * Name
						 * @description Rune name
						 * @example ZZZZZFEHUZZZZZ
						 */
						name: string;
						/**
						 * Spaced name
						 * @description Rune name with spacers
						 * @example Z•Z•Z•Z•Z•FEHU•Z•Z•Z•Z•Z
						 */
						spaced_name: string;
						/**
						 * Number
						 * @description Rune number
						 * @example 1
						 */
						number: number;
						/**
						 * Divisibility
						 * @description Rune decimal places
						 * @example 2
						 */
						divisibility: number;
						/**
						 * Symbol
						 * @description Rune symbol
						 * @example ᚠ
						 */
						symbol: string;
						/**
						 * Turbo
						 * @description Rune upgradeability
						 * @example false
						 */
						turbo: boolean;
						/**
						 * Mint terms
						 * @description Rune mint terms
						 */
						mint_terms: {
							amount: string | null;
							cap: string | null;
							height_start: number | null;
							height_end: number | null;
							offset_start: number | null;
							offset_end: number | null;
						};
						/**
						 * Supply information
						 * @description Rune supply information
						 */
						supply: {
							/**
							 * Current supply
							 * @description Circulating supply including mints, burns and premine
							 * @example 11274916350
							 */
							current: string;
							/**
							 * Minted amount
							 * @description Total minted amount
							 * @example 274916100
							 */
							minted: string;
							/**
							 * Total mints
							 * @description Number of mints for this rune
							 * @example 250
							 */
							total_mints: string;
							/**
							 * Mint percentage
							 * @description Percentage of mints that have been claimed
							 * @example 59.4567
							 */
							mint_percentage: string;
							/**
							 * Mintable
							 * @description Whether or not this rune is mintable at this time
							 */
							mintable: boolean;
							/**
							 * Burned amount
							 * @description Total burned amount
							 * @example 5100
							 */
							burned: string;
							/**
							 * Total burns
							 * @description Number of burns for this rune
							 * @example 17
							 */
							total_burns: string;
							/**
							 * Premine amount
							 * @description Amount premined for this rune
							 * @example 11000000000
							 */
							premine: string;
						};
						/**
						 * Transaction location
						 * @description Location of the transaction which confirmed this operation
						 */
						location: {
							/**
							 * Block hash
							 * @description Bitcoin block hash
							 * @example 00000000000000000000c9787573a1f1775a2b56b403a2d0c7957e9a5bc754bb
							 */
							block_hash: string;
							/**
							 * Block height
							 * @description Bitcoin block height
							 * @example 840000
							 */
							block_height: number;
							/**
							 * Transaction ID
							 * @description Bitcoin transaction ID
							 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e
							 */
							tx_id: string;
							/**
							 * Transaction Index
							 * @description Index of this transaction in its Bitcoin block
							 * @example 1
							 */
							tx_index: number;
							/**
							 * Output number
							 * @description Bitcoin transaction output number
							 * @example 100
							 */
							vout?: number;
							/**
							 * Transaction output
							 * @description Bitcoin transaction output
							 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e:100
							 */
							output?: string;
							/**
							 * Timestamp
							 * @description Bitcoin transaction timestamp
							 * @example 1713571767
							 */
							timestamp: number;
						};
					};
				};
			};
			/** @description Default Response */
			404: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/** @enum {string} */
						error: "Not found";
					};
				};
			};
		};
	};
	getRuneActivity: {
		parameters: {
			query?: {
				/** @description Result offset */
				offset?: number;
				/** @description Results per page */
				limit?: number;
			};
			header?: never;
			path: {
				etching: string;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/** @example 20 */
						limit: number;
						/** @example 0 */
						offset: number;
						/** @example 1 */
						total: number;
						results: {
							/**
							 * Address
							 * @description Bitcoin address which initiated this activity
							 * @example bc1q7jd477wc5s88hsvenr0ddtatsw282hfjzg59wz
							 */
							address?: string;
							/**
							 * Receiver address
							 * @description Bitcoin address which is receiving rune balance
							 * @example bc1pgdrveee2v4ez95szaakw5gkd8eennv2dddf9rjdrlt6ch56lzrrsxgvazt
							 */
							receiver_address?: string;
							/**
							 * Amount
							 * @description Rune amount relevat to this activity
							 * @example 11000000000
							 */
							amount?: string;
							/**
							 * Operation
							 * @description Type of operation described in this activity
							 */
							operation: "etching" | "mint" | "burn" | "send" | "receive";
							/**
							 * Transaction location
							 * @description Location of the transaction which confirmed this operation
							 */
							location: {
								/**
								 * Block hash
								 * @description Bitcoin block hash
								 * @example 00000000000000000000c9787573a1f1775a2b56b403a2d0c7957e9a5bc754bb
								 */
								block_hash: string;
								/**
								 * Block height
								 * @description Bitcoin block height
								 * @example 840000
								 */
								block_height: number;
								/**
								 * Transaction ID
								 * @description Bitcoin transaction ID
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e
								 */
								tx_id: string;
								/**
								 * Transaction Index
								 * @description Index of this transaction in its Bitcoin block
								 * @example 1
								 */
								tx_index: number;
								/**
								 * Output number
								 * @description Bitcoin transaction output number
								 * @example 100
								 */
								vout?: number;
								/**
								 * Transaction output
								 * @description Bitcoin transaction output
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e:100
								 */
								output?: string;
								/**
								 * Timestamp
								 * @description Bitcoin transaction timestamp
								 * @example 1713571767
								 */
								timestamp: number;
							};
						}[];
					};
				};
			};
		};
	};
	getRuneAddressActivity: {
		parameters: {
			query?: {
				/** @description Result offset */
				offset?: number;
				/** @description Results per page */
				limit?: number;
			};
			header?: never;
			path: {
				etching: string;
				/**
				 * @description Bitcoin address
				 * @example bc1p8aq8s3z9xl87e74twfk93mljxq6alv4a79yheadx33t9np4g2wkqqt8kc5
				 */
				address: string;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/** @example 20 */
						limit: number;
						/** @example 0 */
						offset: number;
						/** @example 1 */
						total: number;
						results: {
							/**
							 * Address
							 * @description Bitcoin address which initiated this activity
							 * @example bc1q7jd477wc5s88hsvenr0ddtatsw282hfjzg59wz
							 */
							address?: string;
							/**
							 * Receiver address
							 * @description Bitcoin address which is receiving rune balance
							 * @example bc1pgdrveee2v4ez95szaakw5gkd8eennv2dddf9rjdrlt6ch56lzrrsxgvazt
							 */
							receiver_address?: string;
							/**
							 * Amount
							 * @description Rune amount relevat to this activity
							 * @example 11000000000
							 */
							amount?: string;
							/**
							 * Operation
							 * @description Type of operation described in this activity
							 */
							operation: "etching" | "mint" | "burn" | "send" | "receive";
							/**
							 * Transaction location
							 * @description Location of the transaction which confirmed this operation
							 */
							location: {
								/**
								 * Block hash
								 * @description Bitcoin block hash
								 * @example 00000000000000000000c9787573a1f1775a2b56b403a2d0c7957e9a5bc754bb
								 */
								block_hash: string;
								/**
								 * Block height
								 * @description Bitcoin block height
								 * @example 840000
								 */
								block_height: number;
								/**
								 * Transaction ID
								 * @description Bitcoin transaction ID
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e
								 */
								tx_id: string;
								/**
								 * Transaction Index
								 * @description Index of this transaction in its Bitcoin block
								 * @example 1
								 */
								tx_index: number;
								/**
								 * Output number
								 * @description Bitcoin transaction output number
								 * @example 100
								 */
								vout?: number;
								/**
								 * Transaction output
								 * @description Bitcoin transaction output
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e:100
								 */
								output?: string;
								/**
								 * Timestamp
								 * @description Bitcoin transaction timestamp
								 * @example 1713571767
								 */
								timestamp: number;
							};
						}[];
					};
				};
			};
		};
	};
	getRuneHolders: {
		parameters: {
			query?: {
				/** @description Result offset */
				offset?: number;
				/** @description Results per page */
				limit?: number;
			};
			header?: never;
			path: {
				etching: string;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/** @example 20 */
						limit: number;
						/** @example 0 */
						offset: number;
						/** @example 1 */
						total: number;
						results: {
							/**
							 * Address
							 * @description Bitcoin address which holds this balance
							 * @example bc1q7jd477wc5s88hsvenr0ddtatsw282hfjzg59wz
							 */
							address?: string;
							/**
							 * Balance
							 * @description Rune balance
							 * @example 11000000000
							 */
							balance: string;
						}[];
					};
				};
			};
		};
	};
	getRuneHolderBalance: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				etching: string;
				/**
				 * @description Bitcoin address
				 * @example bc1p8aq8s3z9xl87e74twfk93mljxq6alv4a79yheadx33t9np4g2wkqqt8kc5
				 */
				address: string;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/**
						 * Address
						 * @description Bitcoin address which holds this balance
						 * @example bc1q7jd477wc5s88hsvenr0ddtatsw282hfjzg59wz
						 */
						address?: string;
						/**
						 * Balance
						 * @description Rune balance
						 * @example 11000000000
						 */
						balance: string;
					};
				};
			};
			/** @description Default Response */
			404: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/** @enum {string} */
						error: "Not found";
					};
				};
			};
		};
	};
	getAddressBalances: {
		parameters: {
			query?: {
				/** @description Result offset */
				offset?: number;
				/** @description Results per page */
				limit?: number;
			};
			header?: never;
			path: {
				/**
				 * @description Bitcoin address
				 * @example bc1p8aq8s3z9xl87e74twfk93mljxq6alv4a79yheadx33t9np4g2wkqqt8kc5
				 */
				address: string;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/** @example 20 */
						limit: number;
						/** @example 0 */
						offset: number;
						/** @example 1 */
						total: number;
						results: ({
							/**
							 * Rune detail
							 * @description Details of the rune affected by this activity
							 */
							rune: {
								/**
								 * ID
								 * @description Rune ID
								 * @example 840000:1
								 */
								id: string;
								/**
								 * Number
								 * @description Rune number
								 * @example 1
								 */
								number: number;
								/**
								 * Name
								 * @description Rune name
								 * @example ZZZZZFEHUZZZZZ
								 */
								name: string;
								/**
								 * Spaced name
								 * @description Rune name with spacers
								 * @example Z•Z•Z•Z•Z•FEHU•Z•Z•Z•Z•Z
								 */
								spaced_name: string;
								/**
								 * Divisibility
								 * @description Rune decimal places
								 * @example 2
								 */
								divisibility: number;
							};
						} & {
							/**
							 * Address
							 * @description Bitcoin address which holds this balance
							 * @example bc1q7jd477wc5s88hsvenr0ddtatsw282hfjzg59wz
							 */
							address?: string;
							/**
							 * Balance
							 * @description Rune balance
							 * @example 11000000000
							 */
							balance: string;
						})[];
					};
				};
			};
		};
	};
	getAddressActivity: {
		parameters: {
			query?: {
				/** @description Result offset */
				offset?: number;
				/** @description Results per page */
				limit?: number;
			};
			header?: never;
			path: {
				/**
				 * @description Bitcoin address
				 * @example bc1p8aq8s3z9xl87e74twfk93mljxq6alv4a79yheadx33t9np4g2wkqqt8kc5
				 */
				address: string;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/** @example 20 */
						limit: number;
						/** @example 0 */
						offset: number;
						/** @example 1 */
						total: number;
						results: ({
							/**
							 * Rune detail
							 * @description Details of the rune affected by this activity
							 */
							rune: {
								/**
								 * ID
								 * @description Rune ID
								 * @example 840000:1
								 */
								id: string;
								/**
								 * Number
								 * @description Rune number
								 * @example 1
								 */
								number: number;
								/**
								 * Name
								 * @description Rune name
								 * @example ZZZZZFEHUZZZZZ
								 */
								name: string;
								/**
								 * Spaced name
								 * @description Rune name with spacers
								 * @example Z•Z•Z•Z•Z•FEHU•Z•Z•Z•Z•Z
								 */
								spaced_name: string;
								/**
								 * Divisibility
								 * @description Rune decimal places
								 * @example 2
								 */
								divisibility: number;
							};
						} & {
							/**
							 * Address
							 * @description Bitcoin address which initiated this activity
							 * @example bc1q7jd477wc5s88hsvenr0ddtatsw282hfjzg59wz
							 */
							address?: string;
							/**
							 * Receiver address
							 * @description Bitcoin address which is receiving rune balance
							 * @example bc1pgdrveee2v4ez95szaakw5gkd8eennv2dddf9rjdrlt6ch56lzrrsxgvazt
							 */
							receiver_address?: string;
							/**
							 * Amount
							 * @description Rune amount relevat to this activity
							 * @example 11000000000
							 */
							amount?: string;
							/**
							 * Operation
							 * @description Type of operation described in this activity
							 */
							operation: "etching" | "mint" | "burn" | "send" | "receive";
							/**
							 * Transaction location
							 * @description Location of the transaction which confirmed this operation
							 */
							location: {
								/**
								 * Block hash
								 * @description Bitcoin block hash
								 * @example 00000000000000000000c9787573a1f1775a2b56b403a2d0c7957e9a5bc754bb
								 */
								block_hash: string;
								/**
								 * Block height
								 * @description Bitcoin block height
								 * @example 840000
								 */
								block_height: number;
								/**
								 * Transaction ID
								 * @description Bitcoin transaction ID
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e
								 */
								tx_id: string;
								/**
								 * Transaction Index
								 * @description Index of this transaction in its Bitcoin block
								 * @example 1
								 */
								tx_index: number;
								/**
								 * Output number
								 * @description Bitcoin transaction output number
								 * @example 100
								 */
								vout?: number;
								/**
								 * Transaction output
								 * @description Bitcoin transaction output
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e:100
								 */
								output?: string;
								/**
								 * Timestamp
								 * @description Bitcoin transaction timestamp
								 * @example 1713571767
								 */
								timestamp: number;
							};
						})[];
					};
				};
			};
		};
	};
	getTransactionActivity: {
		parameters: {
			query?: {
				/** @description Result offset */
				offset?: number;
				/** @description Results per page */
				limit?: number;
			};
			header?: never;
			path: {
				/**
				 * @description A transaction ID
				 * @example 8f46f0d4ef685e650727e6faf7e30f23b851a7709714ec774f7909b3fb5e604c
				 */
				tx_id: string;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/** @example 20 */
						limit: number;
						/** @example 0 */
						offset: number;
						/** @example 1 */
						total: number;
						results: ({
							/**
							 * Rune detail
							 * @description Details of the rune affected by this activity
							 */
							rune: {
								/**
								 * ID
								 * @description Rune ID
								 * @example 840000:1
								 */
								id: string;
								/**
								 * Number
								 * @description Rune number
								 * @example 1
								 */
								number: number;
								/**
								 * Name
								 * @description Rune name
								 * @example ZZZZZFEHUZZZZZ
								 */
								name: string;
								/**
								 * Spaced name
								 * @description Rune name with spacers
								 * @example Z•Z•Z•Z•Z•FEHU•Z•Z•Z•Z•Z
								 */
								spaced_name: string;
								/**
								 * Divisibility
								 * @description Rune decimal places
								 * @example 2
								 */
								divisibility: number;
							};
						} & {
							/**
							 * Address
							 * @description Bitcoin address which initiated this activity
							 * @example bc1q7jd477wc5s88hsvenr0ddtatsw282hfjzg59wz
							 */
							address?: string;
							/**
							 * Receiver address
							 * @description Bitcoin address which is receiving rune balance
							 * @example bc1pgdrveee2v4ez95szaakw5gkd8eennv2dddf9rjdrlt6ch56lzrrsxgvazt
							 */
							receiver_address?: string;
							/**
							 * Amount
							 * @description Rune amount relevat to this activity
							 * @example 11000000000
							 */
							amount?: string;
							/**
							 * Operation
							 * @description Type of operation described in this activity
							 */
							operation: "etching" | "mint" | "burn" | "send" | "receive";
							/**
							 * Transaction location
							 * @description Location of the transaction which confirmed this operation
							 */
							location: {
								/**
								 * Block hash
								 * @description Bitcoin block hash
								 * @example 00000000000000000000c9787573a1f1775a2b56b403a2d0c7957e9a5bc754bb
								 */
								block_hash: string;
								/**
								 * Block height
								 * @description Bitcoin block height
								 * @example 840000
								 */
								block_height: number;
								/**
								 * Transaction ID
								 * @description Bitcoin transaction ID
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e
								 */
								tx_id: string;
								/**
								 * Transaction Index
								 * @description Index of this transaction in its Bitcoin block
								 * @example 1
								 */
								tx_index: number;
								/**
								 * Output number
								 * @description Bitcoin transaction output number
								 * @example 100
								 */
								vout?: number;
								/**
								 * Transaction output
								 * @description Bitcoin transaction output
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e:100
								 */
								output?: string;
								/**
								 * Timestamp
								 * @description Bitcoin transaction timestamp
								 * @example 1713571767
								 */
								timestamp: number;
							};
						})[];
					};
				};
			};
		};
	};
	isValidOutput: {
		parameters: {
			query: {
				/**
				 * @description Bitcoin address
				 * @example bc1p8aq8s3z9xl87e74twfk93mljxq6alv4a79yheadx33t9np4g2wkqqt8kc5
				 */
				address: string;
				/**
				 * @description Bitcoin transaction output index
				 * @example 100
				 */
				vout: number;
				/** @description Result offset */
				offset?: number;
				/** @description Results per page */
				limit?: number;
			};
			header?: never;
			path: {
				/**
				 * @description A transaction ID
				 * @example 8f46f0d4ef685e650727e6faf7e30f23b851a7709714ec774f7909b3fb5e604c
				 */
				tx_id: string;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/** @example 20 */
						limit: number;
						/** @example 0 */
						offset: number;
						/** @example 1 */
						total: number;
						results: ({
							/**
							 * Rune detail
							 * @description Details of the rune affected by this activity
							 */
							rune: {
								/**
								 * ID
								 * @description Rune ID
								 * @example 840000:1
								 */
								id: string;
								/**
								 * Number
								 * @description Rune number
								 * @example 1
								 */
								number: number;
								/**
								 * Name
								 * @description Rune name
								 * @example ZZZZZFEHUZZZZZ
								 */
								name: string;
								/**
								 * Spaced name
								 * @description Rune name with spacers
								 * @example Z•Z•Z•Z•Z•FEHU•Z•Z•Z•Z•Z
								 */
								spaced_name: string;
								/**
								 * Divisibility
								 * @description Rune decimal places
								 * @example 2
								 */
								divisibility: number;
							};
						} & {
							/**
							 * Address
							 * @description Bitcoin address which initiated this activity
							 * @example bc1q7jd477wc5s88hsvenr0ddtatsw282hfjzg59wz
							 */
							address?: string;
							/**
							 * Receiver address
							 * @description Bitcoin address which is receiving rune balance
							 * @example bc1pgdrveee2v4ez95szaakw5gkd8eennv2dddf9rjdrlt6ch56lzrrsxgvazt
							 */
							receiver_address?: string;
							/**
							 * Amount
							 * @description Rune amount relevat to this activity
							 * @example 11000000000
							 */
							amount?: string;
							/**
							 * Operation
							 * @description Type of operation described in this activity
							 */
							operation: "etching" | "mint" | "burn" | "send" | "receive";
							/**
							 * Transaction location
							 * @description Location of the transaction which confirmed this operation
							 */
							location: {
								/**
								 * Block hash
								 * @description Bitcoin block hash
								 * @example 00000000000000000000c9787573a1f1775a2b56b403a2d0c7957e9a5bc754bb
								 */
								block_hash: string;
								/**
								 * Block height
								 * @description Bitcoin block height
								 * @example 840000
								 */
								block_height: number;
								/**
								 * Transaction ID
								 * @description Bitcoin transaction ID
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e
								 */
								tx_id: string;
								/**
								 * Transaction Index
								 * @description Index of this transaction in its Bitcoin block
								 * @example 1
								 */
								tx_index: number;
								/**
								 * Output number
								 * @description Bitcoin transaction output number
								 * @example 100
								 */
								vout?: number;
								/**
								 * Transaction output
								 * @description Bitcoin transaction output
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e:100
								 */
								output?: string;
								/**
								 * Timestamp
								 * @description Bitcoin transaction timestamp
								 * @example 1713571767
								 */
								timestamp: number;
							};
						})[];
					};
				};
			};
		};
	};
	getTxVoutRuneAmount: {
		parameters: {
			query: {
				/**
				 * @description Bitcoin transaction output index
				 * @example 100
				 */
				vout: number;
			};
			header?: never;
			path: {
				/**
				 * @description A transaction ID
				 * @example 8f46f0d4ef685e650727e6faf7e30f23b851a7709714ec774f7909b3fb5e604c
				 */
				tx_id: string;
				rune_id: string;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/**
						 * ID
						 * @description Rune ID
						 * @example 840000:1
						 */
						rune_id: string;
						address_amount: {
							/**
							 * Address
							 * @description Bitcoin address which operates this amount of runes
							 * @example bc1q7jd477wc5s88hsvenr0ddtatsw282hfjzg59wz
							 */
							address?: string;
							/**
							 * Amount
							 * @description Rune amount relevat to this activity
							 * @example 11000000000
							 */
							amount: string;
						}[];
						/**
						 * Amount
						 * @description Rune amount relevat to UTXO
						 * @example 11000000000
						 */
						total_amount: string;
					};
				};
			};
			/** @description Default Response */
			404: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/** @enum {string} */
						error: "Not found";
					};
				};
			};
		};
	};
	getBlockActivity: {
		parameters: {
			query?: {
				/** @description Result offset */
				offset?: number;
				/** @description Results per page */
				limit?: number;
			};
			header?: never;
			path: {
				block: string;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						/** @example 20 */
						limit: number;
						/** @example 0 */
						offset: number;
						/** @example 1 */
						total: number;
						results: ({
							/**
							 * Rune detail
							 * @description Details of the rune affected by this activity
							 */
							rune: {
								/**
								 * ID
								 * @description Rune ID
								 * @example 840000:1
								 */
								id: string;
								/**
								 * Number
								 * @description Rune number
								 * @example 1
								 */
								number: number;
								/**
								 * Name
								 * @description Rune name
								 * @example ZZZZZFEHUZZZZZ
								 */
								name: string;
								/**
								 * Spaced name
								 * @description Rune name with spacers
								 * @example Z•Z•Z•Z•Z•FEHU•Z•Z•Z•Z•Z
								 */
								spaced_name: string;
								/**
								 * Divisibility
								 * @description Rune decimal places
								 * @example 2
								 */
								divisibility: number;
							};
						} & {
							/**
							 * Address
							 * @description Bitcoin address which initiated this activity
							 * @example bc1q7jd477wc5s88hsvenr0ddtatsw282hfjzg59wz
							 */
							address?: string;
							/**
							 * Receiver address
							 * @description Bitcoin address which is receiving rune balance
							 * @example bc1pgdrveee2v4ez95szaakw5gkd8eennv2dddf9rjdrlt6ch56lzrrsxgvazt
							 */
							receiver_address?: string;
							/**
							 * Amount
							 * @description Rune amount relevat to this activity
							 * @example 11000000000
							 */
							amount?: string;
							/**
							 * Operation
							 * @description Type of operation described in this activity
							 */
							operation: "etching" | "mint" | "burn" | "send" | "receive";
							/**
							 * Transaction location
							 * @description Location of the transaction which confirmed this operation
							 */
							location: {
								/**
								 * Block hash
								 * @description Bitcoin block hash
								 * @example 00000000000000000000c9787573a1f1775a2b56b403a2d0c7957e9a5bc754bb
								 */
								block_hash: string;
								/**
								 * Block height
								 * @description Bitcoin block height
								 * @example 840000
								 */
								block_height: number;
								/**
								 * Transaction ID
								 * @description Bitcoin transaction ID
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e
								 */
								tx_id: string;
								/**
								 * Transaction Index
								 * @description Index of this transaction in its Bitcoin block
								 * @example 1
								 */
								tx_index: number;
								/**
								 * Output number
								 * @description Bitcoin transaction output number
								 * @example 100
								 */
								vout?: number;
								/**
								 * Transaction output
								 * @description Bitcoin transaction output
								 * @example 2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e:100
								 */
								output?: string;
								/**
								 * Timestamp
								 * @description Bitcoin transaction timestamp
								 * @example 1713571767
								 */
								timestamp: number;
							};
						})[];
					};
				};
			};
		};
	};
	getBlockHeight: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Default Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": {
						last_scanned_height: number;
					};
				};
			};
		};
	};
}
